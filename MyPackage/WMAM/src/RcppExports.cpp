// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <omp.h>


#include <iostream>
#include <fstream>
#include <istream>
#include <vector>
#include <bitset>
#include <string>

using namespace std;
using namespace Rcpp;
using Eigen::MatrixXi;
using Eigen::MatrixXd;
using Eigen::Lower;
using Eigen::Map;   // maps rather than copies


// checkGenotypes
void checkGenotypes(CharacterVector f_name);
RcppExport SEXP WMAM_checkGenotypes(SEXP f_nameSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name(f_nameSEXP );
        checkGenotypes(f_name);
    }
    return R_NilValue;
END_RCPP
}
// getRowColumn
std::vector<long> getRowColumn(std::string fname);
RcppExport SEXP WMAM_getRowColumn(SEXP fnameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::string >::type fname(fnameSEXP );
        std::vector<long> __result = getRowColumn(fname);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// createMt_rcpp
void createMt_rcpp(CharacterVector f_name, CharacterVector f_name_bin, double max_memory_in_Gbytes, std::vector <long> dims);
RcppExport SEXP WMAM_createMt_rcpp(SEXP f_nameSEXP, SEXP f_name_binSEXP, SEXP max_memory_in_GbytesSEXP, SEXP dimsSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name(f_nameSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type f_name_bin(f_name_binSEXP );
        Rcpp::traits::input_parameter< double >::type max_memory_in_Gbytes(max_memory_in_GbytesSEXP );
        Rcpp::traits::input_parameter< std::vector <long> >::type dims(dimsSEXP );
        createMt_rcpp(f_name, f_name_bin, max_memory_in_Gbytes, dims);
    }
    return R_NilValue;
END_RCPP
}
// calculate_reduced_a_rcpp
MatrixXd calculate_reduced_a_rcpp(CharacterVector f_name_bin, double varG, Map<MatrixXd> P, Map<MatrixXd> y, double max_memory_in_Gbytes, std::vector <long> dims, Rcpp::NumericVector selected_loci);
RcppExport SEXP WMAM_calculate_reduced_a_rcpp(SEXP f_name_binSEXP, SEXP varGSEXP, SEXP PSEXP, SEXP ySEXP, SEXP max_memory_in_GbytesSEXP, SEXP dimsSEXP, SEXP selected_lociSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name_bin(f_name_binSEXP );
        Rcpp::traits::input_parameter< double >::type varG(varGSEXP );
        Rcpp::traits::input_parameter< Map<MatrixXd> >::type P(PSEXP );
        Rcpp::traits::input_parameter< Map<MatrixXd> >::type y(ySEXP );
        Rcpp::traits::input_parameter< double >::type max_memory_in_Gbytes(max_memory_in_GbytesSEXP );
        Rcpp::traits::input_parameter< std::vector <long> >::type dims(dimsSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type selected_loci(selected_lociSEXP );
        MatrixXd __result = calculate_reduced_a_rcpp(f_name_bin, varG, P, y, max_memory_in_Gbytes, dims, selected_loci);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// calculate_a_and_vara_rcpp
Rcpp::List calculate_a_and_vara_rcpp(CharacterVector f_name_bin, Rcpp::NumericVector selected_loci, Map<MatrixXd> inv_MMt_sqrt, Map<MatrixXd> dim_reduced_vara, double max_memory_in_Gbytes, std::vector <long> dims, Eigen::VectorXd a);
RcppExport SEXP WMAM_calculate_a_and_vara_rcpp(SEXP f_name_binSEXP, SEXP selected_lociSEXP, SEXP inv_MMt_sqrtSEXP, SEXP dim_reduced_varaSEXP, SEXP max_memory_in_GbytesSEXP, SEXP dimsSEXP, SEXP aSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name_bin(f_name_binSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type selected_loci(selected_lociSEXP );
        Rcpp::traits::input_parameter< Map<MatrixXd> >::type inv_MMt_sqrt(inv_MMt_sqrtSEXP );
        Rcpp::traits::input_parameter< Map<MatrixXd> >::type dim_reduced_vara(dim_reduced_varaSEXP );
        Rcpp::traits::input_parameter< double >::type max_memory_in_Gbytes(max_memory_in_GbytesSEXP );
        Rcpp::traits::input_parameter< std::vector <long> >::type dims(dimsSEXP );
        Rcpp::traits::input_parameter< Eigen::VectorXd >::type a(aSEXP );
        Rcpp::List __result = calculate_a_and_vara_rcpp(f_name_bin, selected_loci, inv_MMt_sqrt, dim_reduced_vara, max_memory_in_Gbytes, dims, a);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// createM_rcpp
void createM_rcpp(CharacterVector f_name, CharacterVector f_name_bin, double max_memory_in_Gbytes, std::vector <long> dims);
RcppExport SEXP WMAM_createM_rcpp(SEXP f_nameSEXP, SEXP f_name_binSEXP, SEXP max_memory_in_GbytesSEXP, SEXP dimsSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name(f_nameSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type f_name_bin(f_name_binSEXP );
        Rcpp::traits::input_parameter< double >::type max_memory_in_Gbytes(max_memory_in_GbytesSEXP );
        Rcpp::traits::input_parameter< std::vector <long> >::type dims(dimsSEXP );
        createM_rcpp(f_name, f_name_bin, max_memory_in_Gbytes, dims);
    }
    return R_NilValue;
END_RCPP
}
// extract_geno_rcpp
Eigen::VectorXi extract_geno_rcpp(CharacterVector f_name_bin, double max_memory_in_Gbytes, int selected_locus, std::vector<long> dims);
RcppExport SEXP WMAM_extract_geno_rcpp(SEXP f_name_binSEXP, SEXP max_memory_in_GbytesSEXP, SEXP selected_locusSEXP, SEXP dimsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name_bin(f_name_binSEXP );
        Rcpp::traits::input_parameter< double >::type max_memory_in_Gbytes(max_memory_in_GbytesSEXP );
        Rcpp::traits::input_parameter< int >::type selected_locus(selected_locusSEXP );
        Rcpp::traits::input_parameter< std::vector<long> >::type dims(dimsSEXP );
        Eigen::VectorXi __result = extract_geno_rcpp(f_name_bin, max_memory_in_Gbytes, selected_locus, dims);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// calculateMMt_rcpp
Eigen::MatrixXi calculateMMt_rcpp(CharacterVector f_name_bin, double max_memory_in_Gbytes, int num_cores, Rcpp::NumericVector selected_loci, std::vector<long> dims);
RcppExport SEXP WMAM_calculateMMt_rcpp(SEXP f_name_binSEXP, SEXP max_memory_in_GbytesSEXP, SEXP num_coresSEXP, SEXP selected_lociSEXP, SEXP dimsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type f_name_bin(f_name_binSEXP );
        Rcpp::traits::input_parameter< double >::type max_memory_in_Gbytes(max_memory_in_GbytesSEXP );
        Rcpp::traits::input_parameter< int >::type num_cores(num_coresSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type selected_loci(selected_lociSEXP );
        Rcpp::traits::input_parameter< std::vector<long> >::type dims(dimsSEXP );
        Eigen::MatrixXi __result = calculateMMt_rcpp(f_name_bin, max_memory_in_Gbytes, num_cores, selected_loci, dims);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
