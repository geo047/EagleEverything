# Run R
# purge and load modules to set up enviro variables
# this needs to run in R

library(Rcpp)
PKG_LIBS <- sprintf('-Wl,-rpath, /apps/magma/2.5.1a1-ipl64-cuda90/lib -L /apps/magma/2.5.1a1-ipl64-cuda90/lib -lmagma  /apps/magma/2.5.1a1-ipl64-cuda90/lib/libmagma.a -Wl,-rpath,/apps/cuda/8.0.61/lib64 %s', Rcpp:::RcppLdFlags())
PKG_CPPFLAGS <- sprintf('-std=c++11 -DMAGMA_WITH_MKL -mkl -DADD_ -DHAVE_CUBLAS -I/apps/magma/2.5.1a1-ipl64-cuda90/include -I /home/geo047/EagleEverything/MyPackage/GPUtestCode/include -I/apps/cuda/8.0.61/include %s', Rcpp:::RcppCxxFlags())
Sys.setenv(PKG_LIBS = PKG_LIBS , PKG_CPPFLAGS = PKG_CPPFLAGS)
sourceCpp("RcppExampleQR.cpp", rebuild=TRUE, verbose=TRUE)

# for testing only
set.seed(100)
n_row <- 4000; n_col <- 4000
A <- matrix(rnorm(n_row * n_col), n_row, n_col)
A <-tcrossprod(A)


start.time <- Sys.time()
qrA <- gpuQR_magma(A)  ## note  this replaces A with the answers ... 
# read Q from /scratch1/geo047/test.bin
filename <- "/scratch1/geo047/test.bin"
Q <- readBin(filename, double(), n_row*n_col)
Q <- matrix(data=Q, nrow=n_row, byrow=FALSE)


end.time <- Sys.time()
print(end.time - start.time)
start.time <- Sys.time()
qrA_R <- qr(A, complete=TRUE)
end.time <- Sys.time()
print(end.time - start.time)

print("Results from CPU")
qr.Q(qrA_R)[1:5,1:5]
qr.R(qrA_R)[1:5,1:5]

print("Results from Magma GPU")
qrA[1:5,1:5]



