# Run R
# purge and load modules to set up enviro variables
# this needs to run in R

MAGMA_HOME <- "/apps/magma/2.5.1a1-ipl64-cuda90"
CUDA_HOME <- "/apps/cuda/9.0.176"
MKLROOT <- "/apps/intel/mkl/2017.2.174/compilers_and_libraries_2017.2.174/linux/mkl"

library(Rcpp)
# experimenting with flags - grabbed from intel web site but these dont load magma correctlyl  - dynamic
#PKG_LIBS <- sprintf('-L%s/lib  -lmagma -L%s/lib64 -lcublas -lcudart -lcusparse -L%s/lib/intel64  -Wl,--no-as-needed -lmkl_intel_ilp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl', MAGMA_HOME, CUDA_HOME, MKLROOT, MKLROOT, MKLROOT, MKLROOT)

#PKG_CPPFLAGS <- sprintf('-DADD_ %s -I%s/include -I%s/include  -DMKL_ILP64 -DMKL_ILP64 -m64  -I%s/include', Rcpp:::RcppCxxFlags() , MAGMA_HOME,  CUDA_HOME, MKLROOT)

# static version 
#PKG_LIBS <- sprintf('-L%s/lib  -lmagma -L%s/lib64 -lcublas -lcudart -lcusparse -L%s/lib -Wl,--start-group %s/lib/intel64/libmkl_intel_ilp64.a %s/lib/intel64/libmkl_intel_thread.a %s/lib/intel64/libmkl_core.a -Wl,--end-group -liomp5 -lpthread -lm -ldl', MAGMA_HOME, CUDA_HOME, MKLROOT, MKLROOT, MKLROOT, MKLROOT)
#PKG_CPPFLAGS <- sprintf('-std=c++11  -DADD_ %s -I%s/include -I%s/include -DMKL_ILP64 -I%s/include', Rcpp:::RcppCxxFlags() , MAGMA_HOME,  CUDA_HOME, MKLROOT)


## This works
PKG_LIBS <- sprintf('-Wl,-rpath, %s/lib -L %s/lib -lmagma  %s/lib/libmagma.a -Wl,-rpath,/apps/cuda/8.0.61/lib64 -lmkl_intel_ilp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl  %s', MAGMA_HOME,  MAGMA_HOME, MAGMA_HOME,   Rcpp:::RcppLdFlags())
PKG_CPPFLAGS <- sprintf('-std=c++11 -DMAGMA_WITH_MKL -mkl -DADD_ -DHAVE_CUBLAS -I%s/include -I /home/geo047/EagleEverything/MyPackage/GPUtestCode/include -I%s/include -DMKL_ILP64 -m64 -I%s/include  %s', MAGMA_HOME, CUDA_HOME, MKLROOT, Rcpp:::RcppCxxFlags())
# PKG_CPPFLAGS <- sprintf('-std=c++11 -DMAGMA_WITH_MKL -mkl -DADD_ -DHAVE_CUBLAS -I%s/include -I /home/geo047/EagleEverything/MyPackage/GPUtestCode/include -I/apps/cuda/8.0.61/include -DMKL_ILP64 -m64 -I%s/include  %s', MAGMA_HOME, MKLROOT, Rcpp:::RcppCxxFlags())
Sys.setenv(PKG_LIBS = PKG_LIBS , PKG_CPPFLAGS = PKG_CPPFLAGS)
sourceCpp("RcppExampleEigen.cpp", rebuild=TRUE, verbose=TRUE)

# for testing only
set.seed(100)
n_row <- 150; n_col <- 150
A <- matrix(rnorm(n_row * n_col), n_row, n_col)
A <- tcrossprod(A)    ##  gives me a symmetric matrix

start.time <- Sys.time()
eigenA_MAGMA  <- gpuEigen_magma(A)  ## note  this replaces A with the answers ... 
end.time <- Sys.time()
print(end.time - start.time)




start.time <- Sys.time()
eigenA_R <- eigen(A)
end.time <- Sys.time()
print(end.time - start.time)

summary( eigenA_MAGMA -  sort(eigenA_R$values))




