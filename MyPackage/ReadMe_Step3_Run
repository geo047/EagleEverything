# setup
set.seed(104)
n <- 45000
ngpu <- 4
res   <- matrix(sample(c(0,2), n*n, T), nrow=n)
 res  <- tcrossprod(res)  ## turns matrix into symmetric matrix




## solve

library(Eagle)
start <- Sys.time()
invGPU <- magmaSolve(res, ngpu=ngpu, printInfo=TRUE)
end  <- Sys.time()
print(end - start)


start <- Sys.time()
invCPU <- solve(res)
end  <- Sys.time()
print(end - start)

print(sum(invGPU - invCPU))


################
## Eigen -----
###############

library(Eagle)
start <- Sys.time()
eigenGPU <- magmaEigenNonsym(res, ngpu=ngpu, printInfo=TRUE)
#eigenGPU <- magmaEigen(res, ngpu=ngpu, printInfo=TRUE)
end  <- Sys.time()
print(end - start)


start <- Sys.time()
eigenCPU <- eigen(res, symmetric=FALSE)
end  <- Sys.time()
print(end - start)


print(sum(eigenCPU$values - eigenGPU$values))
# abs because of the sign can be different
print(sum(abs(eigenCPU$vectors) - abs(eigenGPU$vectors)))










## Testing of magmaQR
library(Eagle)
start <- Sys.time()
qGPU  <- magmaQR(res, ngpu=ngpu, printInfo=TRUE)
end  <- Sys.time()
print(end - start)

 ## CPU 
start <- Sys.time()
qCPU  <- qr.Q(qr(res))
end  <- Sys.time()
print(end - start)

print(qGPU[1:5, 1:5])
print("---------------------")
print(qCPU[1:5, 1:5])

print(sum(qGPU-qCPU))






